// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <App/> Bottom Sheet Snapping (From Inbox) 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Bottom Sheet Snapping (From Inbox): Bottom Sheet View Should Have Y-Axis 0 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": 1131,
      "position": "absolute",
      "width": 523,
      "zIndex": 1,
    }
  }
  testID="v-bottom-sheet"
>
  <View
    style={
      Object {
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Bottom Sheet Snapping (From Inbox): Bottom Sheet View Should Have Y-Axis Equal To Height 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": 1131,
      "position": "absolute",
      "width": 523,
      "zIndex": 1,
    }
  }
  testID="v-bottom-sheet"
>
  <View
    style={
      Object {
        "top": 1131,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Chat Avatars 1 Avatars: Should Have 1 Avatar 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 2 Avatars: Should Have Client Avatar And 1 Chat Avatar 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 1,
          "width": 19,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 2 Avatars: Should Have Client Avatar And Deactivated Chat Avatars 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 0,
          "width": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 3 Avatars: Should Have Client Avatar And 2 Chat Avatar 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 1,
          "width": 19,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 1,
          "width": 19,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -19,
          }
        }
      >
        <Image
          source={2}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 3 Avatars: Should Have Client Avatar And Deactivated Chat Avatars 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 0,
          "width": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 0,
          "width": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 19,
          }
        }
      >
        <Image
          source={2}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 4 Avatars: Should Have Client Avatar And 2 Chat Avatar 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 1,
          "width": 19,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 1,
          "width": 19,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": -19,
          }
        }
      >
        <Image
          source={2}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Avatars 4 Avatars: Should Have Client Avatar And Deactivated Chat Avatars 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
  testID="bn-menu"
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "width": 38,
        }
      }
    >
      <Image
        source={0}
        style={
          Object {
            "backgroundColor": "#4B4B4B",
            "borderRadius": 38,
            "height": 38,
            "position": "absolute",
            "width": 38,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 0,
          "width": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 19,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "borderRadius": 38,
          "height": 38,
          "opacity": 0,
          "width": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginLeft": 19,
          }
        }
      >
        <Image
          source={2}
          style={
            Object {
              "backgroundColor": "#4B4B4B",
              "borderRadius": 38,
              "height": 38,
              "position": "absolute",
              "width": 38,
            }
          }
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Chat Chat Context 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Chat Chat Context: Y-Axis should be 0 1`] = `
<View
  style={
    Object {
      "bottom": 0,
      "flex": 1,
      "position": "absolute",
      "width": 523,
      "zIndex": 5,
    }
  }
  testID="v-chat-context"
>
  <View
    style={
      Object {
        "backgroundColor": "#171717",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "marginHorizontal": 20,
          "marginVertical": 20,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 15,
              "marginRight": 20,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "marginRight": 20,
            }
          }
        >
          Today, 12:00 AM
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": 45.6,
            }
          }
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      ellipsizeMode="tail"
      numberOfLines={3}
      style={
        Object {
          "color": "#818181",
          "fontSize": 15,
          "marginBottom": 30,
          "marginHorizontal": 20,
          "marginTop": 10,
        }
      }
    >
      Yay
    </Text>
  </View>
</View>
`;

exports[`Testing <App/> Chat Chat Context: Y-Axis should be equal to screen's hight 1`] = `
<View
  style={
    Object {
      "bottom": -1131,
      "flex": 1,
      "position": "absolute",
      "width": 523,
      "zIndex": 5,
    }
  }
  testID="v-chat-context"
>
  <View
    style={
      Object {
        "backgroundColor": "#171717",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "marginHorizontal": 20,
          "marginVertical": 20,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 15,
              "marginRight": 20,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "marginRight": 20,
            }
          }
        >
          
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": 45.6,
            }
          }
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
    <Text
      ellipsizeMode="tail"
      numberOfLines={3}
      style={
        Object {
          "color": "#818181",
          "fontSize": 15,
          "marginBottom": 30,
          "marginHorizontal": 20,
          "marginTop": 10,
        }
      }
    />
  </View>
</View>
`;

exports[`Testing <App/> Chat Height With Keyboard: Should Have Full Height 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1064,
    }
  }
  testID="v-chat"
/>
`;

exports[`Testing <App/> Chat Height With Keyboard: Should Have Height Minus Keyboard Height & Margin 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 492,
    }
  }
  testID="v-chat"
/>
`;

exports[`Testing <App/> Chat Messages List Normal 1`] = `
<View
  data={
    Array [
      Object {
        "owner": "0",
        "text": "<3",
        "timestamp": 1999-10-09T09:01:00.000Z,
      },
      Object {
        "owner": "1",
        "text": "Yay",
        "timestamp": 1999-10-09T09:00:00.000Z,
      },
    ]
  }
  inverted={true}
  keyExtractor={[Function]}
  renderItem={[Function]}
  testID="v-messages"
/>
`;

exports[`Testing <App/> Chat Messages List Normal: Should Be Message With Timestamp And Without A Background 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    9 Oct 1999
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List Normal: Should Be Message Without Timestamp And With A Background 1`] = `
<View>
  <View />
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-end",
          "backgroundColor": "#1C1C1C",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 0,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 49.5,
          "minWidth": 73,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        &lt;3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List Timestamps Formatting: Should Have A Timestamp of Full Date 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    9 Oct 1999
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List Timestamps Formatting: Should Have A Timestamp of This Week 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    Saturday, 12:00 AM
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List Timestamps Formatting: Should Have A Timestamp of Today 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    12:00 AM
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List Timestamps Formatting: Should Have A Timestamp of Yesterday 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    Yesterday, 12:00 AM
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List With Avatars: Should Be Message With Timestamp And Avatar And Without A Background 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    9 Oct 1999
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-start",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 3,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 40,
          "minWidth": 55,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Image
        source={1}
        style={
          Object {
            "alignSelf": "flex-start",
            "borderRadius": 28,
            "height": 28,
            "marginLeft": 20,
            "width": 28,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 330.40000000000003,
          }
        }
      >
        Yay
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Messages List With Avatars: Should Be Message Without Timestamp And With A Background 1`] = `
<View>
  <View />
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-end",
          "backgroundColor": "#1C1C1C",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 0,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 49.5,
          "minWidth": 73,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        &lt;3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Sending Messages 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": "100%",
      "opacity": 1,
      "position": "absolute",
      "width": "100%",
    }
  }
  testID="v-inbox"
>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
    testID="v-inbox"
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="bn-chat"
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "marginBottom": 20,
              "marginTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginLeft": 20,
                "marginRight": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 70,
                  "marginLeft": 5,
                  "width": 70,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 70,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": 70,
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#4B4B4B",
                      "borderRadius": 70,
                      "height": 70,
                      "position": "absolute",
                      "width": 70,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#000000",
                      "borderRadius": 23,
                      "borderWidth": 3,
                      "height": 23,
                      "marginLeft": -10,
                      "opacity": 1,
                      "position": "absolute",
                      "width": 23,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "marginLeft": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": 22,
                    "fontWeight": "bold",
                  }
                }
              >
                Mika
              </Text>
              <Text
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 20,
                  }
                }
              >
                Sunday, 12:00 AM
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 22,
                    "marginTop": 10,
                  }
                }
              >
                Yay
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="bn-chat"
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "marginBottom": 20,
              "marginTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginLeft": 20,
                "marginRight": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 70,
                  "marginLeft": 5,
                  "width": 70,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 70,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": 70,
                  }
                }
              >
                <Image
                  source={2}
                  style={
                    Object {
                      "backgroundColor": "#4B4B4B",
                      "borderRadius": 70,
                      "height": 70,
                      "position": "absolute",
                      "width": 70,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#000000",
                      "borderRadius": 23,
                      "borderWidth": 3,
                      "height": 23,
                      "marginLeft": -10,
                      "opacity": 1,
                      "position": "absolute",
                      "width": 23,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "marginLeft": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": 22,
                    "fontWeight": "bold",
                  }
                }
              >
                Skye
              </Text>
              <Text
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 20,
                  }
                }
              >
                Saturday, 12:00 AM
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 22,
                    "marginTop": 10,
                  }
                }
              >
                Ya?
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Testing <App/> Chat Sending Messages: Sent Message 1`] = `
<TextInput
  allowFontScaling={true}
  multiline={true}
  onChangeText={[Function]}
  placeholder="Write Message"
  placeholderTextColor="rgba(255,255,255,0.45)"
  rejectResponderTermination={true}
  style={
    Object {
      "color": "#ffffff",
      "flex": 1,
      "fontSize": 16,
      "marginBottom": 5,
      "marginLeft": 20,
      "marginRight": 5,
      "marginTop": 5,
    }
  }
  testID="in-message"
  underlineColorAndroid="transparent"
  value=""
/>
`;

exports[`Testing <App/> Chat Sending Messages: Should Be A Message Equal to <3 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 12,
        "marginBottom": 7,
        "marginHorizontal": 40,
        "marginTop": 40,
        "textAlign": "center",
      }
    }
  >
    12:00 AM
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "flex-end",
          "backgroundColor": "#1C1C1C",
          "borderColor": "#1C1C1C",
          "borderRadius": 25,
          "borderWidth": 0,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginBottom": 5,
          "marginLeft": 20,
          "marginRight": 20,
          "marginTop": 10,
          "maxWidth": 418.40000000000003,
          "minHeight": 49.5,
          "minWidth": 73,
          "paddingVertical": 10,
        }
      }
      testID="bn-context"
    >
      <Text
        style={
          Object {
            "color": "rgba(255,255,255,0.8)",
            "fontSize": 16,
            "marginLeft": 20,
            "marginRight": 20,
            "maxWidth": 378.40000000000003,
          }
        }
      >
        &lt;3
      </Text>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Testing <App/> Chat Sending Messages: Should Be Sorted With Skye on Top 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": "100%",
      "opacity": 1,
      "position": "absolute",
      "width": "100%",
    }
  }
  testID="v-inbox"
>
  <RCTScrollView
    style={
      Object {
        "flex": 1,
      }
    }
    testID="v-inbox"
  >
    <View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="bn-chat"
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "marginBottom": 20,
              "marginTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginLeft": 20,
                "marginRight": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 70,
                  "marginLeft": 5,
                  "width": 70,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 70,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": 70,
                  }
                }
              >
                <Image
                  source={2}
                  style={
                    Object {
                      "backgroundColor": "#4B4B4B",
                      "borderRadius": 70,
                      "height": 70,
                      "position": "absolute",
                      "width": 70,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#000000",
                      "borderRadius": 23,
                      "borderWidth": 3,
                      "height": 23,
                      "marginLeft": -10,
                      "opacity": 0,
                      "position": "absolute",
                      "width": 23,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "marginLeft": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": 22,
                    "fontWeight": "bold",
                  }
                }
              >
                Skye
              </Text>
              <Text
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 20,
                  }
                }
              >
                12:00 AM
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 22,
                    "marginTop": 10,
                  }
                }
              >
                &lt;3
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        testID="bn-chat"
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "marginBottom": 20,
              "marginTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flexDirection": "row",
                "marginLeft": 20,
                "marginRight": 20,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 70,
                  "marginLeft": 5,
                  "width": 70,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 70,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": 70,
                  }
                }
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "backgroundColor": "#4B4B4B",
                      "borderRadius": 70,
                      "height": 70,
                      "position": "absolute",
                      "width": 70,
                    }
                  }
                />
                <View
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "borderColor": "#000000",
                      "borderRadius": 23,
                      "borderWidth": 3,
                      "height": 23,
                      "marginLeft": -10,
                      "opacity": 1,
                      "position": "absolute",
                      "width": 23,
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "marginLeft": 20,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#ffffff",
                    "fontSize": 22,
                    "fontWeight": "bold",
                  }
                }
              >
                Mika
              </Text>
              <Text
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 20,
                  }
                }
              >
                Sunday, 12:00 AM
              </Text>
              <Text
                numberOfLines={1}
                style={
                  Object {
                    "color": "#818181",
                    "fontSize": 22,
                    "marginTop": 10,
                  }
                }
              >
                Yay
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Testing <App/> Chat Sending Messages: Should Have A Normal Date 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
      "justifyContent": "center",
    }
  }
  testID="v-chat-header"
>
  <Text
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 15,
        "fontWeight": "bold",
      }
    }
  >
    Skye
  </Text>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 13,
      }
    }
  >
    Active 3 days ago
  </Text>
</View>
`;

exports[`Testing <App/> Chat Sending Messages: Should Have A Recently Active State 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
      "justifyContent": "center",
    }
  }
  testID="v-chat-header"
>
  <Text
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 15,
        "fontWeight": "bold",
      }
    }
  >
    Skye
  </Text>
  <Text
    style={
      Object {
        "color": "#818181",
        "fontSize": 13,
      }
    }
  >
    Active recently
  </Text>
</View>
`;

exports[`Testing <App/> Chat Sending Messages: Typing Message 1`] = `
<TextInput
  allowFontScaling={true}
  multiline={true}
  onChangeText={[Function]}
  placeholder="Write Message"
  placeholderTextColor="rgba(255,255,255,0.45)"
  rejectResponderTermination={true}
  style={
    Object {
      "color": "#ffffff",
      "flex": 1,
      "fontSize": 16,
      "marginBottom": 5,
      "marginLeft": 20,
      "marginRight": 5,
      "marginTop": 5,
    }
  }
  testID="in-message"
  underlineColorAndroid="transparent"
  value="<3"
/>
`;

exports[`Testing <App/> Loading Error 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "flex": 1,
      "justifyContent": "center",
    }
  }
  testID="v-error"
>
  <Text
    style={
      Object {
        "backgroundColor": "red",
        "borderRadius": 5,
        "color": "#ffffff",
        "fontSize": 18,
        "padding": 15,
      }
    }
  >
    test
  </Text>
</RCTSafeAreaView>
`;

exports[`Testing <App/> Menus Navigating to Profile: Bottom Should Have A Additional Button With Profile Icon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flexDirection": "row",
      "height": 56,
      "justifyContent": "center",
    }
  }
  testID="v-bottom"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-inbox"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "rgba(75,75,75,0.3)",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255,255,255,0.6)",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-discover"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "rgba(75,75,75,0.3)",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255,255,255,0.6)",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-additional"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "#4B4B4B",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Menus Navigating to Profile: Holder View Should Be Hidden 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="none"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Navigating to Profile: Menu View Should Be Hidden 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 0,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Menus Navigating to Profile: Navigation View Should Be Profile 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-navigation"
>
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-inbox"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-discover"
  />
  <View
    pointerEvents="box-none"
    style={
      Object {
        "height": "100%",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-profile"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-settings"
  />
</View>
`;

exports[`Testing <App/> Menus Navigating to Settings: Bottom Should Have A Additional Button With Settings Icon 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#000000",
      "flexDirection": "row",
      "height": 56,
      "justifyContent": "center",
    }
  }
  testID="v-bottom"
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-inbox"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "rgba(75,75,75,0.3)",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255,255,255,0.6)",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-discover"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "rgba(75,75,75,0.3)",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "rgba(255,255,255,0.6)",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID="bn-additional"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "maxWidth": 168,
          "minWidth": 80,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "backgroundColor": "#4B4B4B",
            "borderRadius": 44,
            "height": 44,
            "position": "absolute",
            "width": 44,
          }
        }
      >
        <View />
      </View>
      <Text
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": "#ffffff",
              "fontSize": 24,
            },
            undefined,
            Object {
              "fontFamily": "feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Menus Navigating to Settings: Holder View Should Be Hidden 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="none"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Navigating to Settings: Menu View Should Be Hidden 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 0,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Menus Navigating to Settings: Navigation View Should Be Settings 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-navigation"
>
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-inbox"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-discover"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-profile"
  />
  <View
    pointerEvents="box-none"
    style={
      Object {
        "height": "100%",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-settings"
  />
</View>
`;

exports[`Testing <App/> Menus Showing Group Chat Menu: Holder View Should Be Visible & Enabled 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0.75,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Showing Group Chat Menu: Menu View Should Be Visible 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
      testID="v-menu-content"
    >
      <View
        style={
          Object {
            "height": 38,
            "justifyContent": "center",
            "margin": 15,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "fontWeight": "700",
            }
          }
        >
          Group
        </Text>
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 16,
              "fontWeight": "700",
            }
          }
        >
          Group of Wholesome Girls
        </Text>
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "marginVertical": 17,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-chat-mute"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Mute
          </Text>
        </View>
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-chat-group"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Group
          </Text>
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#818181",
              "height": 1,
              "marginVertical": 8,
              "width": "85%",
            }
          }
        />
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-chat-block"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Leave, Block & Report
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bn-menu"
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "width": 38,
            }
          }
        >
          <Image
            source={0}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 38,
                "height": 38,
                "position": "absolute",
                "width": 38,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "opacity": 1,
              "width": 19,
            }
          }
        >
          <View
            style={
              Object {
                "marginLeft": -19,
              }
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "backgroundColor": "#4B4B4B",
                  "borderRadius": 38,
                  "height": 38,
                  "position": "absolute",
                  "width": 38,
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "opacity": 1,
              "width": 19,
            }
          }
        >
          <View
            style={
              Object {
                "marginLeft": -19,
              }
            }
          >
            <Image
              source={2}
              style={
                Object {
                  "backgroundColor": "#4B4B4B",
                  "borderRadius": 38,
                  "height": 38,
                  "position": "absolute",
                  "width": 38,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Menus Showing Normal Chat Menu: Holder View Should Be Visible & Enabled 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0.75,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Showing Normal Chat Menu: Menu View Should Be Visible 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
      testID="v-menu-content"
    >
      <View
        style={
          Object {
            "height": 38,
            "justifyContent": "center",
            "margin": 15,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "fontWeight": "700",
            }
          }
        >
          Chat
        </Text>
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 16,
              "fontWeight": "700",
            }
          }
        >
          Mika
        </Text>
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "marginVertical": 17,
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-chat-mute"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Mute
          </Text>
        </View>
        <View
          style={
            Object {
              "alignSelf": "center",
              "backgroundColor": "#818181",
              "height": 1,
              "marginVertical": 8,
              "width": "85%",
            }
          }
        />
        <View
          accessible={true}
          focusable={false}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-chat-block"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Block & Report
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bn-menu"
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "width": 38,
            }
          }
        >
          <Image
            source={0}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 38,
                "height": 38,
                "position": "absolute",
                "width": 38,
              }
            }
          />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "opacity": 1,
              "width": 19,
            }
          }
        >
          <View
            style={
              Object {
                "marginLeft": -19,
              }
            }
          >
            <Image
              source={1}
              style={
                Object {
                  "backgroundColor": "#4B4B4B",
                  "borderRadius": 38,
                  "height": 38,
                  "position": "absolute",
                  "width": 38,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu 2`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu: Holder View Should Be Visible & Enabled 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="box-only"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0.75,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu: Initial Holder View Should Be Hidden & Disabled 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="none"
  style={
    Object {
      "backgroundColor": "#000000",
      "height": 1131,
      "opacity": 0,
      "position": "absolute",
      "width": 523,
      "zIndex": 2,
    }
  }
  testID="v-holder"
/>
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu: Initial Menu View Should Be Hidden 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 0,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
      testID="v-menu-content"
    >
      <View
        style={
          Object {
            "height": 38,
            "justifyContent": "center",
            "margin": 15,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "fontWeight": "700",
            }
          }
        >
          Hello
        </Text>
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 16,
              "fontWeight": "700",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "marginVertical": 17,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-profile"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Profile
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-settings"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Settings
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "padding": 9,
            }
          }
          testID="bn-privacy"
        >
          <View>
            <View />
          </View>
          <Text
            style={
              Object {
                "color": "#818181",
                "fontSize": 11,
                "fontWeight": "700",
              }
            }
          >
            Privacy Policy
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "padding": 9,
            }
          }
          testID="bn-terms"
        >
          <View>
            <View />
          </View>
          <Text
            style={
              Object {
                "color": "#818181",
                "fontSize": 11,
                "fontWeight": "700",
              }
            }
          >
            Terms of Service
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "margin": 20,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://herpproject.com/assets/logo-white.png",
            }
          }
          style={
            Object {
              "height": 8,
              "resizeMode": "contain",
              "width": 32,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bn-menu"
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "width": 38,
            }
          }
        >
          <Image
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 38,
                "height": 38,
                "position": "absolute",
                "width": 38,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Menus Showing and Hiding Main Menu: Menu View Should Be Visible 1`] = `
<View
  style={
    Object {
      "height": 38,
      "minWidth": 38,
    }
  }
  testID="v-menu"
>
  <View
    style={
      Object {
        "backgroundColor": "#414141",
        "borderRadius": 15,
        "height": 622.0500000000001,
        "opacity": 1,
        "position": "absolute",
        "right": 10,
        "top": -9,
        "width": 493,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
      testID="v-menu-content"
    >
      <View
        style={
          Object {
            "height": 38,
            "justifyContent": "center",
            "margin": 15,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 13,
              "fontWeight": "700",
            }
          }
        >
          Hello
        </Text>
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 16,
              "fontWeight": "700",
            }
          }
        />
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "marginVertical": 17,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-profile"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Profile
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row-reverse",
              "padding": 17,
            }
          }
          testID="bn-settings"
        >
          <View>
            <View />
          </View>
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 18,
                },
                Object {
                  "marginHorizontal": 23,
                },
                Object {
                  "fontFamily": "feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#ffffff",
                "flex": 1,
                "fontSize": 14,
                "marginHorizontal": 23,
              }
            }
          >
            Settings
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "padding": 9,
            }
          }
          testID="bn-privacy"
        >
          <View>
            <View />
          </View>
          <Text
            style={
              Object {
                "color": "#818181",
                "fontSize": 11,
                "fontWeight": "700",
              }
            }
          >
            Privacy Policy
          </Text>
        </View>
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "padding": 9,
            }
          }
          testID="bn-terms"
        >
          <View>
            <View />
          </View>
          <Text
            style={
              Object {
                "color": "#818181",
                "fontSize": 11,
                "fontWeight": "700",
              }
            }
          >
            Terms of Service
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "margin": 20,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://herpproject.com/assets/logo-white.png",
            }
          }
          style={
            Object {
              "height": 8,
              "resizeMode": "contain",
              "width": 32,
            }
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "marginRight": 20,
        "minWidth": 38,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="bn-menu"
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <View>
          <View />
        </View>
        <View
          style={
            Object {
              "borderRadius": 38,
              "height": 38,
              "width": 38,
            }
          }
        >
          <Image
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 38,
                "height": 38,
                "position": "absolute",
                "width": 38,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <App/> Navigation Views 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Navigation Views: Initial Navigation View Should Be Inbox 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-navigation"
>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "height": "100%",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-inbox"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-discover"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-profile"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-settings"
  />
</View>
`;

exports[`Testing <App/> Navigation Views: Navigation View Should Be Discover 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-navigation"
>
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-inbox"
  />
  <View
    pointerEvents="box-none"
    style={
      Object {
        "height": "100%",
        "opacity": 1,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-discover"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-profile"
  />
  <View
    pointerEvents="none"
    style={
      Object {
        "height": "100%",
        "opacity": 0,
        "position": "absolute",
        "width": "100%",
      }
    }
    testID="v-settings"
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Activated Bottom Sheet) 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Activated Bottom Sheet): Bottom Sheet Should Have Y-Axis Equal To Height 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": 1131,
      "position": "absolute",
      "width": 523,
      "zIndex": 1,
    }
  }
  testID="v-bottom-sheet"
>
  <View
    style={
      Object {
        "top": 1131,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Activated Bottom Sheet): Search Bar Should Be Maximize Width Max Width 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 410,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 410,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 348,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Activated Bottom Sheet): Search Bar Should Be Minimized 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 38,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 38,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 0,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Deactivated Bottom Sheet) 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Deactivated Bottom Sheet): Bottom Sheet Should Have Y-Axis 0 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": 1131,
      "position": "absolute",
      "width": 523,
      "zIndex": 1,
    }
  }
  testID="v-bottom-sheet"
>
  <View
    style={
      Object {
        "top": 0,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Deactivated Bottom Sheet): Search Bar Should Be Maximize Width Default Width 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 429,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 429,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 367,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (2 Avatars) (With Deactivated Bottom Sheet): Search Bar Should Be Minimized 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 38,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 38,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 0,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (3 Avatars) 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Search Bar Width (3 Avatars): Bottom Sheet Should Have Y-Axis Equal To Height 1`] = `
<View
  pointerEvents="box-none"
  style={
    Object {
      "height": 1131,
      "position": "absolute",
      "width": 523,
      "zIndex": 1,
    }
  }
  testID="v-bottom-sheet"
>
  <View
    style={
      Object {
        "top": 1131,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (3 Avatars): Search Bar Should Be Maximize Width Max Width 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 391,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 391,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 329,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (3 Avatars): Search Bar Should Be Minimized 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 38,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 38,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 0,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (With Deactivated Bottom Sheet) 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <App/> Search Bar Width (With Deactivated Bottom Sheet): Initial Search Bar Should Be Minimized 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 38,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 38,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 0,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <App/> Search Bar Width (With Deactivated Bottom Sheet): Search Bar Should Be Maximized 1`] = `
<View
  style={
    Object {
      "flexDirection": "row-reverse",
      "height": 38,
      "marginLeft": 15,
      "marginRight": 15,
      "minWidth": 38,
      "width": 429,
    }
  }
  testID="v-search"
>
  <View
    style={
      Object {
        "backgroundColor": "#4B4B4B",
        "borderRadius": 38,
        "height": 38,
        "position": "absolute",
        "width": 429,
      }
    }
  />
  <TextInput
    allowFontScaling={true}
    multiline={false}
    onChangeText={[Function]}
    placeholder="Search"
    placeholderTextColor="rgba(255,255,255,0.45)"
    rejectResponderTermination={true}
    style={
      Object {
        "color": "#ffffff",
        "fontSize": 16,
        "height": 38,
        "marginRight": 15,
        "position": "absolute",
        "right": 0,
        "width": 367,
      }
    }
    testID="in-search"
    underlineColorAndroid="transparent"
    value=""
  />
  <View
    style={
      Object {
        "borderRadius": 38,
        "height": 38,
        "width": 38,
      }
    }
  />
</View>
`;

exports[`Testing <Inbox/> Group of 3 View: Should Be A Group View With 2 Avatars 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-inbox"
>
  <View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="bn-chat"
    >
      <View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 20,
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": 20,
              "marginRight": 20,
            }
          }
        >
          <View
            style={
              Object {
                "height": 70,
                "marginLeft": 5,
                "width": 70,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 52.5,
                  "justifyContent": "center",
                  "left": 18.375,
                  "position": "absolute",
                  "top": 26.25,
                  "width": 52.5,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 52.5,
                    "position": "absolute",
                    "width": 52.5,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 52.5,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 52.5,
                }
              }
            >
              <Image
                source={2}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 52.5,
                    "position": "absolute",
                    "width": 52.5,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 1,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 22,
                  "fontWeight": "bold",
                }
              }
            >
              Group of Wholesome Girls
            </Text>
            <Text
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 20,
                }
              }
            >
              1 Feb 2001
            </Text>
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 22,
                  "marginTop": 10,
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Testing <Inbox/> Group of 4 View: Should Be A Group View With 3 Avatars 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-inbox"
>
  <View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="bn-chat"
    >
      <View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 20,
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": 20,
              "marginRight": 20,
            }
          }
        >
          <View
            style={
              Object {
                "height": 70,
                "marginLeft": 5,
                "width": 70,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 45.5,
                  "justifyContent": "center",
                  "left": 7.75,
                  "position": "absolute",
                  "top": 35.5,
                  "width": 45.5,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 45.5,
                    "position": "absolute",
                    "width": 45.5,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 45.5,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 45.5,
                }
              }
            >
              <Image
                source={2}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 45.5,
                    "position": "absolute",
                    "width": 45.5,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 1,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 45.5,
                  "justifyContent": "center",
                  "left": 30.5,
                  "position": "absolute",
                  "top": 10,
                  "width": 45.5,
                }
              }
            >
              <Image
                source={3}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 45.5,
                    "position": "absolute",
                    "width": 45.5,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 22,
                  "fontWeight": "bold",
                }
              }
            >
              Group of Wholesome Girls
            </Text>
            <Text
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 20,
                }
              }
            >
              2 Mar 2002
            </Text>
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 22,
                  "marginTop": 10,
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Testing <Inbox/> Group of 5 View: Should Be A Group View With 4 Avatars 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-inbox"
>
  <View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="bn-chat"
    >
      <View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 20,
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": 20,
              "marginRight": 20,
            }
          }
        >
          <View
            style={
              Object {
                "height": 70,
                "marginLeft": 5,
                "width": 70,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 35,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "top": 30,
                  "width": 35,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 35,
                    "position": "absolute",
                    "width": 35,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 35,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 35,
                }
              }
            >
              <Image
                source={2}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 35,
                    "position": "absolute",
                    "width": 35,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 1,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 35,
                  "justifyContent": "center",
                  "left": 30,
                  "position": "absolute",
                  "top": 40,
                  "width": 35,
                }
              }
            >
              <Image
                source={3}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 35,
                    "position": "absolute",
                    "width": 35,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
            <View
              style={
                Object {
                  "height": 35,
                  "justifyContent": "center",
                  "left": 30,
                  "position": "absolute",
                  "top": 8,
                  "width": 35,
                }
              }
            >
              <Image
                source={4}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 35,
                    "position": "absolute",
                    "width": 35,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 0,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 22,
                  "fontWeight": "bold",
                }
              }
            >
              Group of Wholesome Girls
            </Text>
            <Text
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 20,
                }
              }
            >
              3 Apr 2003
            </Text>
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 22,
                  "marginTop": 10,
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Testing <Inbox/> Group of 6 View 1`] = `
Snapshot Diff:
Compared values have no visual difference.
`;

exports[`Testing <Inbox/> Normal View: Should Be A Normal Inbox View With 1 Avatar 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
  testID="v-inbox"
>
  <View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="bn-chat"
    >
      <View>
        <View />
      </View>
      <View
        style={
          Object {
            "marginBottom": 20,
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "marginLeft": 20,
              "marginRight": 20,
            }
          }
        >
          <View
            style={
              Object {
                "height": 70,
                "marginLeft": 5,
                "width": 70,
              }
            }
          >
            <View
              style={
                Object {
                  "height": 70,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": 70,
                }
              }
            >
              <Image
                source={1}
                style={
                  Object {
                    "backgroundColor": "#4B4B4B",
                    "borderRadius": 70,
                    "height": 70,
                    "position": "absolute",
                    "width": 70,
                  }
                }
              />
              <View
                style={
                  Object {
                    "backgroundColor": "#ffffff",
                    "borderColor": "#000000",
                    "borderRadius": 23,
                    "borderWidth": 3,
                    "height": 23,
                    "marginLeft": -10,
                    "opacity": 1,
                    "position": "absolute",
                    "width": 23,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "flex": 1,
                "marginLeft": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontSize": 22,
                  "fontWeight": "bold",
                }
              }
            >
              Mika
            </Text>
            <Text
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 20,
                }
              }
            >
              9 Oct 1999
            </Text>
            <Text
              numberOfLines={1}
              style={
                Object {
                  "color": "#818181",
                  "fontSize": 22,
                  "marginTop": 10,
                }
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`Testing <Inbox/> Timestamps Formatting: Should Have A Timestamp of Full Date 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="bn-chat"
>
  <View>
    <View />
  </View>
  <View
    style={
      Object {
        "marginBottom": 20,
        "marginTop": 20,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": 20,
          "marginRight": 20,
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "marginLeft": 5,
            "width": 70,
          }
        }
      >
        <View
          style={
            Object {
              "height": 70,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 70,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 70,
                "height": 70,
                "position": "absolute",
                "width": 70,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderRadius": 23,
                "borderWidth": 3,
                "height": 23,
                "marginLeft": -10,
                "opacity": 1,
                "position": "absolute",
                "width": 23,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 22,
              "fontWeight": "bold",
            }
          }
        >
          Mika
        </Text>
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 20,
            }
          }
        >
          9 Oct 1999
        </Text>
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#818181",
              "fontSize": 22,
              "marginTop": 10,
            }
          }
        >
          Yay
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <Inbox/> Timestamps Formatting: Should Have A Timestamp of This Week 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="bn-chat"
>
  <View>
    <View />
  </View>
  <View
    style={
      Object {
        "marginBottom": 20,
        "marginTop": 20,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": 20,
          "marginRight": 20,
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "marginLeft": 5,
            "width": 70,
          }
        }
      >
        <View
          style={
            Object {
              "height": 70,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 70,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 70,
                "height": 70,
                "position": "absolute",
                "width": 70,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderRadius": 23,
                "borderWidth": 3,
                "height": 23,
                "marginLeft": -10,
                "opacity": 1,
                "position": "absolute",
                "width": 23,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 22,
              "fontWeight": "bold",
            }
          }
        >
          Mika
        </Text>
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 20,
            }
          }
        >
          Saturday, 12:00 AM
        </Text>
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#818181",
              "fontSize": 22,
              "marginTop": 10,
            }
          }
        >
          Yay
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <Inbox/> Timestamps Formatting: Should Have A Timestamp of Today 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="bn-chat"
>
  <View>
    <View />
  </View>
  <View
    style={
      Object {
        "marginBottom": 20,
        "marginTop": 20,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": 20,
          "marginRight": 20,
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "marginLeft": 5,
            "width": 70,
          }
        }
      >
        <View
          style={
            Object {
              "height": 70,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 70,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 70,
                "height": 70,
                "position": "absolute",
                "width": 70,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderRadius": 23,
                "borderWidth": 3,
                "height": 23,
                "marginLeft": -10,
                "opacity": 1,
                "position": "absolute",
                "width": 23,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 22,
              "fontWeight": "bold",
            }
          }
        >
          Mika
        </Text>
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 20,
            }
          }
        >
          12:00 AM
        </Text>
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#818181",
              "fontSize": 22,
              "marginTop": 10,
            }
          }
        >
          Yay
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Testing <Inbox/> Timestamps Formatting: Should Have A Timestamp of Yesterday 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  testID="bn-chat"
>
  <View>
    <View />
  </View>
  <View
    style={
      Object {
        "marginBottom": 20,
        "marginTop": 20,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "marginLeft": 20,
          "marginRight": 20,
        }
      }
    >
      <View
        style={
          Object {
            "height": 70,
            "marginLeft": 5,
            "width": 70,
          }
        }
      >
        <View
          style={
            Object {
              "height": 70,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "top": 0,
              "width": 70,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "backgroundColor": "#4B4B4B",
                "borderRadius": 70,
                "height": 70,
                "position": "absolute",
                "width": 70,
              }
            }
          />
          <View
            style={
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderRadius": 23,
                "borderWidth": 3,
                "height": 23,
                "marginLeft": -10,
                "opacity": 1,
                "position": "absolute",
                "width": 23,
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "marginLeft": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 22,
              "fontWeight": "bold",
            }
          }
        >
          Mika
        </Text>
        <Text
          style={
            Object {
              "color": "#818181",
              "fontSize": 20,
            }
          }
        >
          Yesterday, 12:00 AM
        </Text>
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "#818181",
              "fontSize": 22,
              "marginTop": 10,
            }
          }
        >
          Yay
        </Text>
      </View>
    </View>
  </View>
</View>
`;
